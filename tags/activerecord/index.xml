<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>activerecord on melekes.me</title>
    <link>https://www.melekes.me/tags/activerecord/</link>
    <description>Recent content in activerecord on melekes.me</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved</copyright>
    <lastBuildDate>Sun, 18 Nov 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.melekes.me/tags/activerecord/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Null migration, or What to do when there are too many migrations</title>
      <link>https://www.melekes.me/2012/11/null-migration-or-what-to-do-when-there-are-too-many-migrations/</link>
      <pubDate>Sun, 18 Nov 2012 00:00:00 +0000</pubDate>
      <guid>https://www.melekes.me/2012/11/null-migration-or-what-to-do-when-there-are-too-many-migrations/</guid>
      <description>&lt;p&gt;Migrations are probably one of the most killer features of ActiveRecord.
They allow you to design the architecture of the database along with the
growth of your project. If you change your data model (&lt;a href=&#34;http://martinfowler.com/eaaCatalog/domainModel.html&#34;&gt;Domain Model&lt;/a&gt;),
you reflect that change in code and write a migration (or several migrations),
which will make the necessary actions on your database schema. This may be
creating a new table, deleting a column or adding an unique index.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AssociationCountValidator</title>
      <link>https://www.melekes.me/2012/10/associationcountvalidator/</link>
      <pubDate>Wed, 10 Oct 2012 00:00:00 +0000</pubDate>
      <guid>https://www.melekes.me/2012/10/associationcountvalidator/</guid>
      <description>&lt;p&gt;As a result of my &lt;a href=&#34;https://www.melekes.me/2012/10/validating-nested-associations-in-rails&#34;&gt;previous blog post&lt;/a&gt;
about validating nested associations, I wrote custom validator for Rails 3.
It is intended to help you to validate records count in a given association.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Validating nested associations in Rails</title>
      <link>https://www.melekes.me/2012/10/validating-nested-associations-in-rails/</link>
      <pubDate>Mon, 08 Oct 2012 00:00:00 +0000</pubDate>
      <guid>https://www.melekes.me/2012/10/validating-nested-associations-in-rails/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Rails provide a wide range of options for creating rich forms for your models.
This can be a simple form for one object, or the form for many related objects.
Usually it is a parent-children relations. If you are not familiar with such terms
as &lt;a href=&#34;http://api.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#M001605&#34;&gt;form_for&lt;/a&gt;
or &lt;a href=&#34;http://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html#M002132&#34;&gt;accepts_nested_attributes_for&lt;/a&gt;,
I strongly recommend taking a look at this article &lt;a href=&#34;http://rubysource.com/complex-rails-forms-with-nested-attributes/&#34;&gt;Complex Rails Forms with Nested Attributes&lt;/a&gt;,
written by &lt;a href=&#34;http://xaviershay.com/&#34;&gt;Xavier Shay&lt;/a&gt;, which will show your how you can create complex forms with Rails.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
